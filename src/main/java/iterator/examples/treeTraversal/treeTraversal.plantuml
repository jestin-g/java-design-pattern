@startuml

title __TREETRAVERSAL's Class Diagram__\n

  namespace iterator.examples.treeTraversal {
    class iterator.examples.treeTraversal.BinaryTree {
        - root : Node<T>
        + BinaryTree()
        + forEach()
        + iterator()
    }
  }
  

  namespace iterator.examples.treeTraversal {
    class iterator.examples.treeTraversal.Demo {
        {static} + main()
    }
  }
  

  namespace iterator.examples.treeTraversal {
    class iterator.examples.treeTraversal.InOrderIterator {
        - current : Node<T>
        - root : Node<T>
        - yieldedStart : boolean
        + InOrderIterator()
        + hasNext()
        + next()
        - hasRightmostParent()
    }
  }
  

  namespace iterator.examples.treeTraversal {
    class iterator.examples.treeTraversal.Node {
        + left : Node<T>
        + parent : Node<T>
        + right : Node<T>
        + Node()
        + Node()
    }
  }
  

  iterator.examples.treeTraversal.BinaryTree .up.|> java.lang.Iterable
  iterator.examples.treeTraversal.InOrderIterator .up.|> java.util.Iterator
  iterator.examples.treeTraversal.Node o-- T : value


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
